{"version":3,"sources":["./src/app/mostrar-datos/mostrar-datos.page.html","./src/app/mostrar-datos/mostrar-datos.module.ts","./src/app/mostrar-datos/mostrar-datos.page.scss","./src/app/mostrar-datos/mostrar-datos.page.ts","./src/app/services/rest.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,oEAAoE,SAAS,GAAG,YAAY,2PAA2P,WAAW,yD;;;;;;;;;;;;;;;;;;;;;;ACAzT;AACM;AACF;AACU;AAEV;AAEW;AAExD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC5B;CACF,CAAC;AAWF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QATlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBnC,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAb;AACD;AAEI;AAkBrD;IAGE,0BAAoB,aAA6B,EAAS,WAAwB;QAA9D,kBAAa,GAAb,aAAa,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;IAC5E,CAAC;IAEP,mCAAQ,GAAR;QAAA,iBAUA;QATE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CACnC,kBAAQ;YACN,IAAM,MAAM,GAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAEtC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;gBAC1C,KAAI,CAAC,IAAI,GAAC,IAAI,CAAC;gBACf,KAAK,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACN,CAAC;;gBAbmC,8DAAc;gBAAsB,kEAAW;;IAHvE,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,+JAAwC;;SAEzC,CAAC;+EAKmC,8DAAc,EAAsB,kEAAW;OAHvE,gBAAgB,CAkB5B;IAAD,uBAAC;CAAA;AAlB4B;;;;;;;;;;;;;;;;;;;ACrBY;AACO;AAgBhD;IAME,qBACY,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAH3B,YAAO,GAAG,4CAA4C,CAAC;IAGtB,CAAC;IACzC,+BAAS,GAAT;QACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC;IAC5C,CAAC;IACF,8BAAQ,GAAR,UAAS,EAAE;QAER,IAAI,SAAS,GAAC,IAAI,CAAC,OAAO,GAAE,GAAG,GAAC,EAAE,CAAC;QACnC,KAAK,CAAC,UAAU,GAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,SAAS,CAAC,CAAC;IAChD,CAAC;;gBATyB,+DAAU;;IAPvB,WAAW;QALvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAUwB,+DAAU;OAPvB,WAAW,CAkBvB;IAAD,kBAAC;CAAA;AAlBuB","file":"mostrar-datos-mostrar-datos-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-title>{{dato.id}} {{dato.title}}</ion-title>\\n\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref='/tab3'></ion-back-button>\\n      </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header> \\n\\n<ion-content [fullscreen]>\\n  <ion-card>\\n    <ion-card-content>\\n      {{dato.body}}\\n  </ion-card-content>\\n</ion-card>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MostrarDatosPage } from './mostrar-datos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MostrarDatosPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MostrarDatosPage]\n})\nexport class MostrarDatosPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vc3RyYXItZGF0b3MvbW9zdHJhci1kYXRvcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {RestService} from '../services/rest.service';\n\ninterface Dato {\n  userId: string;\n  id: string;\n  title: string;\n  body: string;\n}\n\n\n\n\n@Component({\n  selector: 'app-mostrar-datos',\n  templateUrl: './mostrar-datos.page.html',\n  styleUrls: ['./mostrar-datos.page.scss'],\n})\n\nexport class MostrarDatosPage implements OnInit {\n  public datoObservable: Observable<any>;\n  dato :Dato;\n  constructor(private activateRoute: ActivatedRoute,private restService: RestService) \n   {    }\n\n  ngOnInit() {\n    this.activateRoute.paramMap.subscribe(\n      paramMap=>{\n        const idDato=paramMap.get('datoId');\n       \n      this.restService.get_Dato(idDato).subscribe(dato =>{  \n            this.dato=dato;\n            alert(this.dato.id);\n      });\n    });\n }\n    \n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\ninterface Dato {\n  userId: string;\n  id: string;\n  title: string;\n  body: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class RestService {\n\n  dato:Dato;\n\n  public baseUrl = 'https://jsonplaceholder.typicode.com/posts';\n\n  constructor(\n      private httpClient: HttpClient ) {  }\n  get_Datos() {\n    return this.httpClient.get(this.baseUrl );\n  }\n get_Dato(id): Observable<Dato>{\n  \n    let stringUrl=this.baseUrl +'/'+id;\n    alert(\"----->>>\"+stringUrl);\n    return this.httpClient.get<Dato>(stringUrl);\n}\n\n}"],"sourceRoot":""}